# dbt project configuration for EO PV data pipeline
# This file will be used by `dlt dbt generate` to create initial models

name: 'eo_pv_pipeline'
version: '0.0.2'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'eo_pv_pipeline'

# dbt-cloud:
#     project-id: 70471823477636

# These configurations specify where dbt should look for different types of files.
# model-paths: ["models"]
# analysis-paths: ["analyses"]
test-paths: ["tests"]
# seed-paths: ["seeds"]
macro-paths: ["macros"]
# snapshot-paths: ["snapshots"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"

# Environment variable setup for models

# Model configurations
models:
  eo_pv_pipeline:
    # Raw models - load data into DuckLake catalog
    raw:
      +materialized: view
      +database: eo_pv_lakehouse
      # R2 S3 configuration for raw models
      +pre_hook:
        - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
        - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
        - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
        - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
        - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

    # Staging models - raw data with geopandas preprocessing (Python models)
    staging:
      +materialized: table
      +database: eo_pv_lakehouse

      # # PV staging models - need R2 S3 configuration
      stg_pv_consolidated:
        +pre_hook:
          - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

      stg_chn_med_res_pv_2024:
        +pre_hook:
          - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

      stg_global_harmonized_large_solar_farms_2020:
        +pre_hook:
          - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

      stg_global_pv_inventory_sent2_spot_2021:
        +pre_hook:
          - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

      stg_ind_pv_solar_farms_2022:
        +pre_hook:
          - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

      stg_uk_crowdsourced_pv_2020:
        +pre_hook:
          - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

      stg_usa_cali_usgs_pv_2016:
        +pre_hook:
          - "{% if target.name in ['dev', 'prod'] %}SET s3_access_key_id='{{ env_var('R2_ACCESS_KEY_ID') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_secret_access_key='{{ env_var('R2_SECRET_KEY') }}';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_endpoint='{{ env_var('CLOUDFLARE_ACCOUNT_ID') }}.r2.cloudflarestorage.com';{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_use_ssl=true;{% endif %}"
          - "{% if target.name in ['dev', 'prod'] %}SET s3_url_style='path';{% endif %}"

      # Overture Maps models - use clean default S3 config for public bucket access (no R2 config)
      stg_overture_admin_boundaries:
        +pre_hook: 
          - "SET s3_region='us-west-2';"
          - "SET s3_use_ssl=true;"
          - "SET s3_url_style='path';"
          - "SET s3_access_key_id='';"  # Blank access key for public bucket
          - "SET s3_secret_access_key='';"  # Blank secret key for public bucket
          - "SET s3_endpoint='overturemaps-us-west-2.s3.us-west-2.amazonaws.com';"
          # required to avoid url encoding and 404 error from incorrectly encoding the s3 URI
          # this is presumably from the dbt enclosing {{ var brackets }} being interpreted as "problematic characters": https://duckdb.org/docs/stable/core_extensions/httpfs/s3api#overview-of-s3-secret-parameters
          - "SET s3_url_compatibility_mode=false;"

    # Prepared models - business logic transformations and data preparation
    prepared:
      +materialized: incremental
      +database: eo_pv_lakehouse

      # Overture Maps models should be views only to minimize storage
      prep_overture_countries:
        +materialized: table
      prep_country_h3_decomposition:
        +materialized: view

      # Large spatial models can use table materialization
      prep_pv_with_admin_boundaries:
        +materialized: table

    # Curated models - final analytical datasets
    # curated:
    #   +materialized: materialized view
    #   +schema: curated

  # Disable dbt_artifacts models temporarily to avoid missing table errors
  # dbt_artifacts:
  #   +enabled: false

# Seed configurations
seeds:
  eo_pv_pipeline:
    +schema: seeds

# tests:
#   +store_failures: true
#   +schema: test_failures

vars:

  # Coordinate reference systems
  default_crs: 'EPSG:4326'  # WGS84

  # Data quality thresholds
  min_geometry_area: 3  # minimum area in square meters
  max_geometry_area: 1000000  # maximum area in square meters

  # H3 spatial indexing settings
  h3_resolution: 12  # ~15,047.5 m² hexagons for PV installations
  h3_country_resolution: 4  # ~1,770 km² hexagons for country decomposition
  h3_overture_res: 6  # ~36.1 km² hexagons for Overture Maps filtering

  # Spatial processing settings
  overlap_threshold: 0.5  # For duplicate detection
  buffer_distance_m: 150   # Buffer for spatial joins

  # Overture Maps configuration
  overture_release: "{{ env_var('OVERTURE_RELEASE') }}"

  # DuckDB-specific settings
  use_native_geometry: true  # Use DuckDB spatial extension instead of WKT
  enable_spatial_index: true # Enable spatial indexing for performance


# Note: Sources are properly configured in models/sources.yml
# DuckDB-specific source configurations can be added here if needed

# DuckDB-specific configurations and environment setup
on-run-start:
  # required for python models
  # h3 now comes installed in Motherduck: https://motherduck.com/docs/about-motherduck/release-notes/#august-21-2025
  - "{% if target.name == 'dev' %} INSTALL h3 FROM community; LOAD h3; {% endif %}"
  - "INSTALL spatial; LOAD spatial"
  - "INSTALL ducklake; LOAD ducklake"
  - "INSTALL arrow FROM community; LOAD arrow"
  - "CALL register_geoarrow_extensions()"
  - "INSTALL httpfs; LOAD httpfs"
  - "INSTALL cache_httpfs; LOAD cache_httpfs"
  - "USE eo_pv_lakehouse;"
  # Note: S3 settings moved to model-specific configurations
  # - R2 models use R2-specific S3 configuration
  # - Overture models use default S3 configuration for public buckets
  # Note: geography extension temporarily commented out due to availability issues
  # - "INSTALL geography FROM community"
  # - "LOAD geography"
